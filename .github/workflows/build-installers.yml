name: Build-SSX-Installers
on: [push, workflow_dispatch]

jobs:
  build:
    strategy:
      matrix: {os: [windows-latest, macos-latest]}
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.os == 'windows-latest' && '3.13' || '3.11' }}

    - run: python -m pip install --upgrade pip pyinstaller

    #─── Debug (Windows only) ───────────────────
    - name: Debug file list (Windows only)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Write-Host "===== File list on Windows runner ====="
        Get-ChildItem -Recurse | ForEach-Object { Write-Host $_.FullName }

    #─── Windows ────────────────────────────────
    - name: Build Windows installer
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        $files = @(
          "Shape.zip",
          "ssf_curry.json",
          "サンプルスーパーファクトリー_生産管理.xlsx",
          "サンプルスーパーファクトリー_製造技術.xlsx",
          "サンプルスーパーファクトリー_品質管理.xlsx",
          "サンプルスーパーファクトリー_製品マスタ.xlsx",
          "サンプルスーパーファクトリー利用上の注意点.pdf",
          "Preferences.tps",
          "ssx.png"
        )
        $addData = @()
        foreach ($f in $files) {
          # ファイル名の末尾部分で部分一致検索して最初の1件を取る
          $suffix = $f.Split('_')[-1]
          $real = Get-ChildItem -Recurse | Where-Object { $_.Name -like "*$suffix" } | Select-Object -First 1
          if ($null -eq $real) { throw "File not found: $f" }
          Write-Host "Resolved $f -> $($real.FullName)"
          $addData += "--add-data=`"$($real.FullName);.`""
        }
        $args = @("--clean","--onefile","--noconsole","--name","SSX_Installer_win") + $addData + "ssx_installer.py"
        py -3.13 -m PyInstaller @args

    #─── macOS ──────────────────────────────────
    - name: Build macOS installer
      if: runner.os == 'macOS'
      shell: bash
      run: |
        echo "===== File list on macOS runner ====="
        find . -type f
        python -m PyInstaller --clean --onefile --windowed --name SSX_Installer_mac \
          --add-data="Shape.zip:." \
          --add-data="ssf_curry.json:." \
          --add-data="サンプルスーパーファクトリー_生産管理.xlsx:." \
          --add-data="サンプルスーパーファクトリー_製造技術.xlsx:." \
          --add-data="サンプルスーパーファクトリー_品質管理.xlsx:." \
          --add-data="サンプルスーパーファクトリー_製品マスタ.xlsx:." \
          --add-data="サンプルスーパーファクトリー利用上の注意点.pdf:." \
          --add-data="Preferences.tps:." \
          --add-data="ssx.png:." \
          ssx_installer.py

    #─── Artifacts ──────────────────────────────
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}-installer
        path: |
          dist/SSX_Installer_win.exe
          dist/SSX_Installer_mac.app
