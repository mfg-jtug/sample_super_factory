name: Build-SSX-Installers
on: [push, workflow_dispatch]

jobs:
  build:
    strategy:
      matrix: {os: [windows-latest, macos-latest]}
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.os == 'windows-latest' && '3.13' || '3.11' }}
    - run: python -m pip install --upgrade pip pyinstaller

    #─── Windows ────────────────────────────────
    - name: Build Windows installer
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        py -3.13 -m PyInstaller --clean --onefile --noconsole --name SSX_Installer_win `
          --add-data "Shape.zip;." `
          --add-data "ssf_curry.json;." `
          --add-data "サンプルスーパーファクトリー_生産管理.xlsx;." `
          --add-data "サンプルスーパーファクトリー_製造技術.xlsx;." `
          --add-data "サンプルスーパーファクトリー_品質管理.xlsx;." `
          --add-data "サンプルスーパーファクトリー_製品マスタ.xlsx;." `
          --add-data "サンプルスーパーファクトリー利用上の注意点.pdf;." `
          --add-data "Preferences.tps;." `
          --add-data "ssx.png;." `
          ssx_installer.py

    #─── macOS ──────────────────────────────────
    - name: Build macOS installer
      if: runner.os == 'macOS'
      shell: bash
      run: |
        python -m PyInstaller --clean --onefile --windowed --name SSX_Installer_mac \
          --add-data="Shape.zip:." \
          --add-data="ssf_curry.json:." \
          --add-data="サンプルスーパーファクトリー_生産管理.xlsx:." \
          --add-data="サンプルスーパーファクトリー_製造技術.xlsx:." \
          --add-data="サンプルスーパーファクトリー_品質管理.xlsx:." \
          --add-data="サンプルスーパーファクトリー_製品マスタ.xlsx:." \
          --add-data="サンプルスーパーファクトリー利用上の注意点.pdf:." \
          --add-data="Preferences.tps:." \
          --add-data="ssx.png:." \
        ssx_installer.py

    #─── Artifacts ──────────────────────────────
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}-installer
        path: |
          dist/SSX_Installer_win.exe
          dist/SSX_Installer_mac.app
