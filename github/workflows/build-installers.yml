name: Build-SSX-Installers
on:
  push:
    branches: [ main ]          # ← main に push されたら実行
  workflow_dispatch:            # ← 手動実行ボタン

env:
  PYTHON_VERSION: '3.13'        # Windows python
  MAC_PY_VERSION: '3.11'        # macOS python (任意)

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.os == 'windows-latest' && env.PYTHON_VERSION || env.MAC_PY_VERSION }}

    - name: Install PyInstaller
      run: python -m pip install --upgrade pip pyinstaller

    - name: Build installer
      shell: bash
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          py -3.13 -m PyInstaller --clean --onefile --noconsole --name SSX_Installer_win \
            --add-data "Shape.zip;." \
            --add-data "ssf_curry.json;." \
            --add-data "サンプルスーパーファクトリー.xlsx;." \
            --add-data "Preferences.tps;." \
            --add-data "ssx.png;." \
            ssx_installer.py
        else
          python -m PyInstaller --clean --onefile --windowed --name SSX_Installer_mac \
            --add-data "Shape.zip:." \
            --add-data "ssf_curry.json:." \
            --add-data "サンプルスーパーファクトリー.xlsx:." \
            --add-data "Preferences.tps:." \
            --add-data "ssx.png:." \
            ssx_installer.py
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}-installer
        path: |
          dist/SSX_Installer_win.exe
          dist/SSX_Installer_mac.app
          dist/SSX_Installer_mac         # 1-file 実行体（必要なら）
