name: Build-SSX-Installers

# ❶ main ブランチへの push と手動実行で発火
on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.13'   # Windows runner 用 (py コマンド使用)
  MAC_PY_VERSION: '3.11'   # macOS runner 用 (任意のバージョン)

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]   # ← 2 つの OS で並列実行
    runs-on: ${{ matrix.os }}

    steps:
    # 1) ソース取得
    - name: Checkout
      uses: actions/checkout@v4

    # 2) Python セットアップ（OS に応じてバージョン指定）
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.os == 'windows-latest' && env.PYTHON_VERSION || env.MAC_PY_VERSION }}

    # 3) PyInstaller インストール
    - name: Install PyInstaller
      run: python -m pip install --upgrade pip pyinstaller

    # 4) OS ごとにビルド実行
    - name: Build installer
      shell: pwsh         # ← Windows でも mac でも動く PowerShell Core
      run: |
        if ($Env:RUNNER_OS -eq 'Windows') {
          py -3.13 -m PyInstaller --clean --onefile --noconsole --name SSX_Installer_win `
            --add-data "Shape.zip;." `
            --add-data "ssf_curry.json;." `
            --add-data "サンプルスーパーファクトリー.xlsx;." `
            --add-data "Preferences.tps;." `
            --add-data "ssx.png;." `
            ssx_installer.py
        }
        else {
          python -m PyInstaller --clean --onefile --windowed --name SSX_Installer_mac \
            --add-data "Shape.zip:." \
            --add-data "ssf_curry.json:." \
            --add-data "サンプルスーパーファクトリー.xlsx:." \
            --add-data "Preferences.tps:." \
            --add-data "ssx.png:." \
            ssx_installer.py
        }

    # 5) 成果物をアップロード
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}-installer
        path: |
          dist/SSX_Installer_win.exe
          dist/SSX_Installer_mac.app
          dist/SSX_Installer_mac   # mac の 1-file 実行体（不要なら削除）
